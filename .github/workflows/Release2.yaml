name: Release
env:
  PROJ: DPModule
  TAG: v10.3b

# Controls when the action will run. Triggers the workflow on push but only for the master branch
on:
  push:
    branches: [ master ]
    types: [ created ]
    paths: 
    - Release/$PROJ.exe

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Project release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

#      - name: Build project # This would actually build your project, using zip for an example artifact
#        run: |
#        zip --junk-paths my-artifact README.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $TAG
          release_name: $PROJ $TAG
          body: |
            _Changes for v $TAG_:
            - Updates for DPModule now will be processed in stand-alone algorithm; updates for module are required now (downloading of other packages will not be available without them);
            - Some improvements applied to packages download interface;
            - Some improvements applied to building algorithm;
            - Updated feedback links;
            - Applied some fixes in packages building algorithm;
            - Path to the package now can be passed as command line parameter;
            - 'Improve' link has been removed from the first page
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object,
          # which include a `upload_url`. See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: Release/$PROJ.exe
          asset_name: $PROJ.exe
          asset_content_type: application/x-msdownload

      - name: Cleanup
        run: |
        rm Release/$PROJ.exe
