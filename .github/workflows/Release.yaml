# Действие, формирующее релиз
name: Release

# Активация по ручному вызову
on:
  workflow_dispatch:
    branches: [ master ]

# Содержит одно задание build с названием Project release с несколькими шагами
jobs:
  build:
    name: Project release
    runs-on: ubuntu-latest
    
# Константы, используемые далее по тексту
    env:
      PROJ: DPModule
      TAG: 10.3c

    steps:
# Проверка состава репозитория (без анализа, как может показаться)
      - name: Checkout code
        uses: actions/checkout@v2
  
# Формирование релиза
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.TAG }}
          release_name: ${{ env.PROJ }} v ${{ env.TAG }}
          body: |
            _Changes for v ${{ env.TAG }}_:
            - Updates for DPModule now will be processed in stand-alone algorithm; updates for module are required now (downloading of other packages will not be available without them);
            - Some improvements applied to packages download interface;
            - Some improvements applied to building algorithm;
            - Updated feedback links;
            - Applied some fixes in packages building algorithm;
            - Path to the package now can be passed as command line parameter;
            - 'Improve' link has been removed from the first page
          draft: false
          prerelease: false

# Загрузка бинарных файлов в релиз
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/github-script@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs').promises;
            const { repo: { owner, repo }, sha } = context;

            for (let file of await fs.readdir('./Release')){
              await github.repos.uploadReleaseAsset({
                owner, repo,
                release_id: ${{ steps.create_release.outputs.id }},
                name: file,
                data: await fs.readFile(`${file}`)
                });
                rm file
              }
